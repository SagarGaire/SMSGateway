@model SMSGateway.Models.SMSPurchases

<script>
    $('.datepicker').datepicker({
        orientation: 'bottom',
        autoclose: true
    })
</script>

<div class="form-horizontal">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Purchase SMS</h4>
    </div>
    <br />

    @using (Ajax.BeginForm("AddSMSPurchase", "SMSPurchases", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "AddSMSPurchaseSuccess",
        InsertionMode = InsertionMode.Replace
    }, new { @id = "form" }))
    {
        <div id="modal-body add-sms-purchase-modal-body" class="modal-body add-sms-purchase-modal-body">
            <div class="form-group">
                @Html.LabelFor(model => model.PurchaseDate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    @Html.EditorFor(x => x.PurchaseDate, new { htmlAttributes = new { @class = "form-control datepicker", @placeholder = "Purchase Date" } })
                    @Html.ValidationMessageFor(x => x.PurchaseDate, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Quantity, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    @Html.EditorFor(x => x.Quantity, new { htmlAttributes = new { @class = "form-control txtSMSPurchaseQuantity", @placeholder = "Quantity" } })
                    @Html.ValidationMessageFor(x => x.Quantity, "", new { @class = "text-danger validation-message" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Rate, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    @Html.EditorFor(x => x.Rate, new { htmlAttributes = new { @class = "form-control txtSMSPurchaseRate", @placeholder = "Rate" } })
                    @Html.ValidationMessageFor(x => x.Rate, "", new { @class = "text-danger validation-message" })
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Subtotal", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    <label class="control-label txtSMSPurchaseSubtotal"></label>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("VAT", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    <label class="control-label">13%</label>
                </div>
            </div>
            <div class="form-group">
                @Html.Label("Total", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    <label class="control-label txtSMSPurchaseTotal"></label>
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Remarks, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-5">
                    <textarea class="form-control txtRemarks" name="Remarks"  placeholder="Remarks"></textarea>
                </div>
            </div>
        </div>

            <div class="modal-footer">
                <input type="submit" value="Add" class="btn btn-warning btnAddSMSPurchase" />
                <button type="button" class="btn btn-warning btnCancel" data-dismiss="modal">Cancel</button>
            </div>
    }
</div>


