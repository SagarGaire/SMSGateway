@model SMSGateway.Models.Suppliers
@{
    if (Model.Status == 1)
    {
        Model._Status = true;
    }
    else
    {
        Model._Status = false;
    }
}

<div class="form-horizontal">
    <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal">&times;</button>
        <h4 class="modal-title">Add Supplier</h4>
    </div>
    <br />

    @using (Ajax.BeginForm("EditSupplier", "Supplier", new AjaxOptions
    {
        HttpMethod = "POST",
        OnSuccess = "EditSupplierSuccess",
        InsertionMode = InsertionMode.Replace
    }, new { @id = "form" }))
    {
        <div id="modal-body edit-supplier-modal-body" class="modal-body edit-supplier-modal-body">
            <h4>Basic Information</h4>
            <hr />
            <div class="form-group">
               
                <div class="col-md-6">
                    @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-4" })
                    <label class="switch">
                        @Html.CheckBoxFor(x => x._Status)
                        <span class="slider round"></span>
                    </label>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    <div class="form-group-col">
                        @Html.LabelFor(model => model.SupplierName, htmlAttributes: new { @class = "control-label" })
                    </div>
                    @*<input type="text" name="SupplierName" data-val="true" data-val-required="Supplier Name is required." class="form-control txtSupplierName" readonly onfocus="this.removeAttribute('readonly');" style="background-color:white" />*@
                    @Html.EditorFor(x => x.SupplierName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.SupplierName, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    <div class="form-group-col">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    </div>
                    @*<input type="text" name="Email" data-val="true" data-val-required="Email is required." class="form-control txtSupplierEmail" readonly onfocus="this.removeAttribute('readonly');" style="background-color:white" />*@
                    @Html.EditorFor(x => x.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(x => x.Email, "", new { @class = "text-danger" })
                </div>
            </div>
            @Html.HiddenFor(model => model.SupplierId)
        </div>
        <div class="modal-footer">
            <input type="submit" value="Edit" class="btn btn-warning btnEditSupplier" />
            <button type="button" class="btn btn-warning btnCancel" data-dismiss="modal">Cancel</button>
        </div>

    }
</div>
